CCS PCH C Compiler, Version 4.140, 22098               26-ago-14 07:45

               Filename:   D:\Projetos\Encoder\main.lst

               ROM used:   1012 bytes (3%)
                           Largest free fragment is 31756
               RAM used:   7 (0%) at main() level
                           20 (1%) worst case
               Stack:     3 locations

*
0000:  GOTO   02C4
.................... /* 
....................  * main.c 
....................  * 
....................  *  Created on: 05/03/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #include <18F45k20.h> 
.................... //////// Standard Header file for the PIC18F45K20 device //////////////// 
.................... #device PIC18F45K20 
.................... #list 
....................  
....................  
.................... #FUSES HS 
.................... #use delay(crystal=16MHz, clock=64MHz) 
*
0034:  CLRF   FEA
0036:  MOVLW  0D
0038:  MOVWF  FE9
003A:  MOVF   FEF,W
003C:  BZ    005A
003E:  MOVLW  14
0040:  MOVWF  01
0042:  CLRF   00
0044:  DECFSZ 00,F
0046:  BRA    0044
0048:  DECFSZ 01,F
004A:  BRA    0042
004C:  MOVLW  BF
004E:  MOVWF  00
0050:  DECFSZ 00,F
0052:  BRA    0050
0054:  BRA    0056
0056:  DECFSZ FEF,F
0058:  BRA    003E
005A:  RETURN 0
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
....................  
.................... #define cmd_subir	1 
.................... #define cmd_descer	2 
.................... #define cmd_parar	3 
.................... #define bto_subir	PIN_B0 
.................... #define bto_descer	PIN_B1 
.................... #define pin_subir	PIN_D0 
.................... #define pin_descer	PIN_D1 
.................... #define debounce	100 
.................... #define	latencia	1000 
....................  
.................... short ctrl_bto; 
.................... short direction; 
....................  
.................... int m_cmd; 
....................  
.................... void parar() { 
.................... 	output_low(pin_subir); 
*
00DE:  BCF    F95.0
00E0:  BCF    F8C.0
.................... 	output_low(pin_descer); 
00E2:  BCF    F95.1
00E4:  BCF    F8C.1
.................... } 
00E6:  GOTO   0110 (RETURN)
....................  
.................... void subir() { 
.................... 	output_low(pin_descer); 
*
00BA:  BCF    F95.1
00BC:  BCF    F8C.1
.................... 	delay_ms(10); 
00BE:  MOVLW  0A
00C0:  MOVWF  0D
00C2:  RCALL  0034
.................... 	output_high(pin_subir); 
00C4:  BCF    F95.0
00C6:  BSF    F8C.0
.................... } 
00C8:  GOTO   0100 (RETURN)
....................  
.................... void descer() { 
.................... 	output_low(pin_subir); 
00CC:  BCF    F95.0
00CE:  BCF    F8C.0
.................... 	delay_ms(10); 
00D0:  MOVLW  0A
00D2:  MOVWF  0D
00D4:  RCALL  0034
.................... 	output_high(pin_descer); 
00D6:  BCF    F95.1
00D8:  BSF    F8C.1
.................... } 
00DA:  GOTO   0108 (RETURN)
....................  
.................... int trata_bto(int cmd) { 
*
005C:  BSF    F93.0
005E:  BCF    0B.0
0060:  BTFSS  F81.0
0062:  BSF    0B.0
0064:  BSF    F93.1
0066:  BCF    0B.1
0068:  BTFSS  F81.1
006A:  BSF    0B.1
006C:  MOVFF  0A,0C
....................  
.................... 	short a = !input(bto_subir); 
.................... 	short b = !input(bto_descer); 
.................... 	int ret = cmd; 
....................  
.................... 	if (a ^ b) { 
0070:  MOVLW  00
0072:  BTFSC  0B.0
0074:  MOVLW  01
0076:  MOVWF  0E
0078:  MOVLW  00
007A:  BTFSC  0B.1
007C:  MOVLW  01
007E:  XORWF  0E,W
0080:  BZ    00A8
.................... 		delay_ms(debounce); 
0082:  MOVLW  64
0084:  MOVWF  0D
0086:  RCALL  0034
.................... 		if (a && ctrl_bto) { 
0088:  BTFSS  0B.0
008A:  BRA    0098
008C:  BTFSS  04.0
008E:  BRA    0098
.................... 			ret = cmd_subir; 
0090:  MOVLW  01
0092:  MOVWF  0C
.................... 			ctrl_bto = FALSE; 
0094:  BCF    04.0
.................... 		} else if (b && ctrl_bto) { 
0096:  BRA    00A6
0098:  BTFSS  0B.1
009A:  BRA    00A6
009C:  BTFSS  04.0
009E:  BRA    00A6
.................... 			ret = cmd_descer; 
00A0:  MOVLW  02
00A2:  MOVWF  0C
.................... 			ctrl_bto = FALSE; 
00A4:  BCF    04.0
.................... 		} 
.................... 	} else if (!ctrl_bto) { 
00A6:  BRA    00B2
00A8:  BTFSC  04.0
00AA:  BRA    00B2
.................... 		ctrl_bto = TRUE; 
00AC:  BSF    04.0
.................... 		ret = cmd_parar; 
00AE:  MOVLW  03
00B0:  MOVWF  0C
.................... 	} 
....................  
.................... 	return ret; 
00B2:  MOVFF  0C,01
.................... } 
00B6:  GOTO   030E (RETURN)
....................  
.................... int trata_cmd(int cmd) { 
*
00EA:  MOVFF  0B,0C
....................  
.................... 	int ret = cmd; 
....................  
.................... 	switch (cmd) { 
00EE:  MOVF   0B,W
00F0:  XORLW  01
00F2:  BZ    00FE
00F4:  XORLW  03
00F6:  BZ    0106
00F8:  XORLW  01
00FA:  BZ    010E
00FC:  BRA    011C
.................... 	case cmd_subir: 
.................... 		subir(); 
00FE:  BRA    00BA
.................... 		ret = cmd_subir; 
0100:  MOVLW  01
0102:  MOVWF  0C
.................... 		break; 
0104:  BRA    011C
.................... 	case cmd_descer: 
.................... 		descer(); 
0106:  BRA    00CC
.................... 		ret = cmd_descer; 
0108:  MOVLW  02
010A:  MOVWF  0C
.................... 		break; 
010C:  BRA    011C
.................... 	case cmd_parar: 
.................... 		parar(); 
010E:  BRA    00DE
.................... 		set_timer0(0); 
0110:  CLRF   FD7
0112:  CLRF   FD6
.................... 		set_timer1(0); 
0114:  CLRF   FCF
0116:  CLRF   FCE
.................... 		ret = cmd_parar; 
0118:  MOVLW  03
011A:  MOVWF  0C
.................... 		break; 
.................... 	default: 
.................... 	} 
....................  
.................... 	return ret; 
011C:  MOVFF  0C,01
.................... } 
0120:  GOTO   0318 (RETURN)
....................  
.................... int main(void) { 
*
02C4:  CLRF   FF8
02C6:  BCF    FD0.7
02C8:  CLRF   FEA
02CA:  CLRF   FE9
02CC:  BSF    FB8.3
02CE:  MOVLW  82
02D0:  MOVWF  FAF
02D2:  MOVLW  06
02D4:  MOVWF  FB0
02D6:  MOVLW  A6
02D8:  MOVWF  FAC
02DA:  MOVLW  90
02DC:  MOVWF  FAB
02DE:  MOVLW  00
02E0:  MOVWF  F7E
02E2:  BCF    FC1.4
02E4:  BCF    FC1.5
02E6:  MOVF   F7F,W
02E8:  ANDLW  E0
02EA:  MOVWF  F7F
02EC:  BCF    F79.5
02EE:  BCF    F79.4
02F0:  CLRF   F7A
02F2:  CLRF   F7B
....................  
.................... 	set_timer0(0); 
02F4:  CLRF   FD7
02F6:  CLRF   FD6
.................... 	set_timer1(0); 
02F8:  CLRF   FCF
02FA:  CLRF   FCE
....................  
.................... 	setup_timer_0(T0_EXT_H_TO_L | T0_DIV_1); 
02FC:  MOVLW  B8
02FE:  MOVWF  FD5
.................... 	setup_timer_1(T1_EXTERNAL | T1_DIV_BY_1); 
0300:  MOVLW  87
0302:  MOVWF  FCD
....................  
.................... 	m_cmd = cmd_parar; 
0304:  MOVLW  03
0306:  MOVWF  05
....................  
.................... 	while (TRUE) { 
....................  
.................... 		m_cmd = trata_cmd(trata_bto(m_cmd)); 
0308:  MOVFF  05,0A
030C:  BRA    005C
030E:  MOVFF  01,0A
0312:  MOVFF  01,0B
0316:  BRA    00EA
0318:  MOVFF  01,05
....................  
.................... 		if (m_cmd == cmd_subir || m_cmd == cmd_descer) { 
031C:  DECFSZ 05,W
031E:  BRA    0322
0320:  BRA    0328
0322:  MOVF   05,W
0324:  SUBLW  02
0326:  BNZ   03DE
....................  
.................... 			delay_cycles(debounce); 
0328:  MOVLW  20
032A:  MOVWF  00
032C:  DECFSZ 00,F
032E:  BRA    032C
0330:  BRA    0332
0332:  NOP   
....................  
.................... 			long t0 = get_timer0(); 
.................... 			long t1 = get_timer1(); 
0334:  MOVF   FD6,W
0336:  MOVWF  06
0338:  MOVFF  FD7,07
033C:  MOVF   FCE,W
033E:  MOVWF  08
0340:  MOVFF  FCF,09
....................  
.................... 			direction = (t0 > t1); 
0344:  BCF    04.1
0346:  MOVF   09,W
0348:  SUBWF  07,W
034A:  BNC   0356
034C:  BNZ   0354
034E:  MOVF   06,W
0350:  SUBWF  08,W
0352:  BC    0356
0354:  BSF    04.1
....................  
.................... 			printf("Timer 0: %lu\n\r", t0); 
0356:  MOVLW  04
0358:  MOVWF  FF6
035A:  MOVLW  00
035C:  MOVWF  FF7
035E:  MOVLW  09
0360:  MOVWF  0B
0362:  RCALL  0124
0364:  MOVLW  10
0366:  MOVWF  FE9
0368:  MOVFF  07,0B
036C:  MOVFF  06,0A
0370:  RCALL  0144
0372:  MOVLW  0A
0374:  BTFSS  F9E.4
0376:  BRA    0374
0378:  MOVWF  FAD
037A:  MOVLW  0D
037C:  BTFSS  F9E.4
037E:  BRA    037C
0380:  MOVWF  FAD
.................... 			printf("Timer 1: %lu\n\r", t1); 
0382:  MOVLW  14
0384:  MOVWF  FF6
0386:  MOVLW  00
0388:  MOVWF  FF7
038A:  MOVLW  09
038C:  MOVWF  0B
038E:  RCALL  0124
0390:  MOVLW  10
0392:  MOVWF  FE9
0394:  MOVFF  09,0B
0398:  MOVFF  08,0A
039C:  RCALL  0144
039E:  MOVLW  0A
03A0:  BTFSS  F9E.4
03A2:  BRA    03A0
03A4:  MOVWF  FAD
03A6:  MOVLW  0D
03A8:  BTFSS  F9E.4
03AA:  BRA    03A8
03AC:  MOVWF  FAD
.................... 			printf("Direction: %d\n\r", direction); 
03AE:  MOVLW  00
03B0:  BTFSC  04.1
03B2:  MOVLW  01
03B4:  MOVWF  0A
03B6:  MOVLW  24
03B8:  MOVWF  FF6
03BA:  MOVLW  00
03BC:  MOVWF  FF7
03BE:  MOVLW  0B
03C0:  MOVWF  0B
03C2:  RCALL  0124
03C4:  MOVFF  0A,0B
03C8:  MOVLW  18
03CA:  MOVWF  0C
03CC:  BRA    0210
03CE:  MOVLW  0A
03D0:  BTFSS  F9E.4
03D2:  BRA    03D0
03D4:  MOVWF  FAD
03D6:  MOVLW  0D
03D8:  BTFSS  F9E.4
03DA:  BRA    03D8
03DC:  MOVWF  FAD
.................... 		} 
....................  
.................... 		delay_ms(latencia); 
03DE:  MOVLW  04
03E0:  MOVWF  0A
03E2:  MOVLW  FA
03E4:  MOVWF  0D
03E6:  RCALL  0034
03E8:  DECFSZ 0A,F
03EA:  BRA    03E2
.................... 	} 
03EC:  BRA    0308
....................  
.................... 	return 0; 
03EE:  MOVLW  00
03F0:  MOVWF  01
.................... } 
03F2:  SLEEP 

Configuration Fuses:
   Word  1: C600   H4 FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV18 NOWDT WDT32768
   Word  3: 8F00   CCP2C1 PBADEN LPT1OSC HFOFST MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

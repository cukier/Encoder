CCS PCB C Compiler, Version 4.124, 5967               27-mar-13 16:47

               Filename: E:\Eletronica\Projetos\Encoder\encoderSim.lst

               ROM used: 186 words (36%)
                         Largest free fragment is 326
               RAM used: 11 (44%) at main() level
                         11 (44%) worst case
               Stack:    0 locations

*
0000:  MOVWF  05
0001:  GOTO   002
.................... /* 
....................  * encoderSim.c 
....................  * 
....................  *  Created on: 26/03/2013 
....................  *      Author: cuki 
....................  */ 
.................... #include<12C508A.h> 
.................... //////// Standard Header file for the PIC12C508A device //////////////// 
.................... #device PIC12C508A 
.................... #list 
....................  
....................  
.................... #fuses NOWDT, NOPROTECT, INTRC, NOMCLR 
.................... #use delay(clock=4MHz) 
....................  
.................... /////////////////////////////////////////saidas 
.................... #define canalA		PIN_B0 
.................... #define canalB		PIN_B1 
.................... #define canalZ		PIN_B5 
.................... /////////////////////////////////////////entradas 
.................... #define avanco		PIN_B3 
.................... #define reversao	PIN_B4 
.................... /////////////////////////////////////////tempos 
.................... #define voltas_nylon	11.5 
.................... #define tempo_elevacao	60 
....................  
.................... static long pulsos; 
*
0008:  CLRF   0B
0009:  CLRF   0C
.................... static long tm0_config = 159; // resol. enc = 1024, 11.5 voltas nylon, 60 segundos operacao 
.................... enum tick_str { 
.................... 	A, B, C, D 
.................... }; 
.................... enum tick_str tempo; 
....................  
.................... int main(void) { 
*
0002:  CLRF   04
0003:  CLRF   0E
0004:  MOVLW  9F
0005:  MOVWF  0D
0006:  MOVLW  FF
0007:  MOVWF  10
.................... 	output_low(PIN_B0); 
*
000A:  BCF    10.0
000B:  MOVF   10,W
000C:  TRIS   6
000D:  BCF    06.0
.................... 	SETUP_TIMER_0(T0_INTERNAL | T0_DIV_8); 
000E:  MOVLW  02
000F:  OPTION
.................... 	while (TRUE) { 
.................... 		if (!input(avanco) || !input(reversao)) { 
0010:  BSF    10.3
0011:  MOVF   10,W
0012:  TRIS   6
0013:  BTFSS  06.3
0014:  GOTO   01A
0015:  BSF    10.4
0016:  MOVF   10,W
0017:  TRIS   6
0018:  BTFSC  06.4
0019:  GOTO   0A2
.................... 			set_timer0(0); 
001A:  CLRF   01
.................... 			while (get_timer0() < tm0_config) 
.................... 				; 
001B:  MOVF   01,W
001C:  MOVF   0E,F
001D:  BTFSS  03.2
001E:  GOTO   01B
001F:  SUBWF  0D,W
0020:  BTFSC  03.2
0021:  GOTO   024
0022:  BTFSC  03.0
0023:  GOTO   01B
.................... 			switch (tempo++) { 
0024:  MOVF   0F,W
0025:  INCF   0F,F
0026:  XORLW  00
0027:  BTFSC  03.2
0028:  GOTO   033
0029:  XORLW  01
002A:  BTFSC  03.2
002B:  GOTO   079
002C:  XORLW  03
002D:  BTFSC  03.2
002E:  GOTO   07E
002F:  XORLW  01
0030:  BTFSC  03.2
0031:  GOTO   09C
0032:  GOTO   09C
.................... 			case A: 
.................... 				if (!input(avanco) && input(reversao)) { 
0033:  BSF    10.3
0034:  MOVF   10,W
0035:  TRIS   6
0036:  BTFSC  06.3
0037:  GOTO   05A
0038:  BSF    10.4
0039:  MOVF   10,W
003A:  TRIS   6
003B:  BTFSS  06.4
003C:  GOTO   05A
.................... 					output_low(canalA); 
003D:  BCF    10.0
003E:  MOVF   10,W
003F:  TRIS   6
0040:  BCF    06.0
.................... 					output_high(canalB); 
0041:  BCF    10.1
0042:  MOVF   10,W
0043:  TRIS   6
0044:  BSF    06.1
.................... 					pulsos++; 
0045:  INCF   0B,F
0046:  BTFSC  03.2
0047:  INCF   0C,F
.................... 					if (pulsos > 1024) 
0048:  MOVLW  03
0049:  MOVWF  07
004A:  MOVF   0C,W
004B:  SUBWF  07,W
004C:  BTFSC  03.0
004D:  GOTO   059
004E:  XORLW  FF
004F:  BTFSS  03.2
0050:  GOTO   057
0051:  MOVLW  00
0052:  MOVWF  07
0053:  MOVF   0B,W
0054:  SUBWF  07,W
0055:  BTFSC  03.0
0056:  GOTO   059
.................... 						pulsos = 0; 
0057:  CLRF   0C
0058:  CLRF   0B
.................... 				} else if (!input(reversao) && input(avanco)) { 
0059:  GOTO   078
005A:  BSF    10.4
005B:  MOVF   10,W
005C:  TRIS   6
005D:  BTFSC  06.4
005E:  GOTO   078
005F:  BSF    10.3
0060:  MOVF   10,W
0061:  TRIS   6
0062:  BTFSS  06.3
0063:  GOTO   078
.................... 					output_high(canalA); 
0064:  BCF    10.0
0065:  MOVF   10,W
0066:  TRIS   6
0067:  BSF    06.0
.................... 					output_high(canalB); 
0068:  BCF    10.1
0069:  MOVF   10,W
006A:  TRIS   6
006B:  BSF    06.1
.................... 					pulsos--; 
006C:  MOVF   0B,W
006D:  BTFSC  03.2
006E:  DECF   0C,F
006F:  DECF   0B,F
.................... 					if (!pulsos) 
0070:  MOVF   0B,W
0071:  IORWF  0C,W
0072:  BTFSS  03.2
0073:  GOTO   078
.................... 						pulsos = 1023; 
0074:  MOVLW  03
0075:  MOVWF  0C
0076:  MOVLW  FF
0077:  MOVWF  0B
.................... 				} 
.................... 				break; 
0078:  GOTO   0A2
.................... 			case B: 
.................... 				output_low(canalB); 
0079:  BCF    10.1
007A:  MOVF   10,W
007B:  TRIS   6
007C:  BCF    06.1
.................... 				break; 
007D:  GOTO   0A2
.................... 			case C: 
.................... 				if (!input(avanco) && input(reversao)) 
007E:  BSF    10.3
007F:  MOVF   10,W
0080:  TRIS   6
0081:  BTFSC  06.3
0082:  GOTO   08D
0083:  BSF    10.4
0084:  MOVF   10,W
0085:  TRIS   6
0086:  BTFSS  06.4
0087:  GOTO   08D
.................... 					output_high(canalA); 
0088:  BCF    10.0
0089:  MOVF   10,W
008A:  TRIS   6
008B:  BSF    06.0
.................... 				else if (!input(reversao) && input(avanco)) 
008C:  GOTO   09B
008D:  BSF    10.4
008E:  MOVF   10,W
008F:  TRIS   6
0090:  BTFSC  06.4
0091:  GOTO   09B
0092:  BSF    10.3
0093:  MOVF   10,W
0094:  TRIS   6
0095:  BTFSS  06.3
0096:  GOTO   09B
.................... 					output_low(canalA); 
0097:  BCF    10.0
0098:  MOVF   10,W
0099:  TRIS   6
009A:  BCF    06.0
.................... 				break; 
009B:  GOTO   0A2
.................... 			default: 
.................... 			case D: 
.................... 				output_high(canalB); 
009C:  BCF    10.1
009D:  MOVF   10,W
009E:  TRIS   6
009F:  BSF    06.1
.................... 				tempo = A; 
00A0:  CLRF   0F
.................... 				break; 
00A1:  GOTO   0A2
.................... 			} 
.................... 		} 
.................... 		if (!input_state(canalA) && !input_state(canalB) 
.................... 				&& !input_state(canalZ) && pulsos == 1024) 
00A2:  BTFSC  06.0
00A3:  GOTO   0B4
00A4:  BTFSC  06.1
00A5:  GOTO   0B4
00A6:  BTFSC  06.5
00A7:  GOTO   0B4
00A8:  MOVF   0B,F
00A9:  BTFSS  03.2
00AA:  GOTO   0B4
00AB:  MOVLW  04
00AC:  SUBWF  0C,W
00AD:  BTFSS  03.2
00AE:  GOTO   0B4
.................... 			output_high(canalZ); 
00AF:  BCF    10.5
00B0:  MOVF   10,W
00B1:  TRIS   6
00B2:  BSF    06.5
.................... 		else if (input_state(canalZ)) 
00B3:  GOTO   0BA
00B4:  BTFSS  06.5
00B5:  GOTO   0BA
.................... 			output_low(canalZ); 
00B6:  BCF    10.5
00B7:  MOVF   10,W
00B8:  TRIS   6
00B9:  BCF    06.5
.................... 	} 
00BA:  GOTO   010
.................... } 
00BB:  SLEEP

Configuration Fuses:
   Word  1: 0FEA   INTRC NOWDT NOPROTECT NOMCLR

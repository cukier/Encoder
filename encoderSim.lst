CCS PCB C Compiler, Version 4.124, 5967               28-mar-13 08:25

               Filename: E:\Eletronica\Projetos\Encoder\encoderSim.lst

               ROM used: 178 words (35%)
                         Largest free fragment is 334
               RAM used: 11 (44%) at main() level
                         11 (44%) worst case
               Stack:    0 locations

*
0000:  MOVWF  05
0001:  GOTO   002
.................... /* 
....................  * encoderSim.c 
....................  * 
....................  *  Created on: 26/03/2013 
....................  *      Author: cuki 
....................  */ 
.................... #include<12C508A.h> 
.................... //////// Standard Header file for the PIC12C508A device //////////////// 
.................... #device PIC12C508A 
.................... #list 
....................  
....................  
.................... #fuses NOWDT, NOPROTECT, INTRC, NOMCLR 
.................... #use delay(clock=4MHz) 
....................  
.................... /////////////////////////////////////////saidas 
.................... #define canalA		PIN_B0 
.................... #define canalB		PIN_B1 
.................... #define canalZ		PIN_B5 
.................... /////////////////////////////////////////entradas 
.................... #define avanco		PIN_B3 
.................... #define reversao	PIN_B4 
.................... /////////////////////////////////////////tempos 
.................... #define voltas_nylon	11.5 
.................... #define tempo_elevacao	60 
.................... #define resolucao_encoder 1024 
....................  
.................... static long pulsos; 
*
0008:  CLRF   0B
0009:  CLRF   0C
.................... static long tm0_config = 159; // resol. enc = 1024, 11.5 voltas nylon, 60 segundos operacao 
.................... enum tick_str { 
.................... 	A, B, C, D 
.................... }; 
.................... enum tick_str tempo; 
....................  
.................... int main(void) { 
*
0002:  CLRF   04
0003:  CLRF   0E
0004:  MOVLW  9F
0005:  MOVWF  0D
0006:  MOVLW  FF
0007:  MOVWF  10
.................... 	output_low(PIN_B0); 
*
000A:  BCF    10.0
000B:  MOVF   10,W
000C:  TRIS   6
000D:  BCF    06.0
.................... 	SETUP_TIMER_0(T0_INTERNAL | T0_DIV_8); 
000E:  MOVLW  02
000F:  OPTION
.................... 	while (TRUE) { 
.................... 		if (!input(avanco) || !input(reversao)) { 
0010:  BSF    10.3
0011:  MOVF   10,W
0012:  TRIS   6
0013:  BTFSS  06.3
0014:  GOTO   01A
0015:  BSF    10.4
0016:  MOVF   10,W
0017:  TRIS   6
0018:  BTFSC  06.4
0019:  GOTO   099
.................... 			set_timer0(0); 
001A:  CLRF   01
.................... 			while (get_timer0() < tm0_config) 
.................... 				; 
001B:  MOVF   01,W
001C:  MOVF   0E,F
001D:  BTFSS  03.2
001E:  GOTO   01B
001F:  SUBWF  0D,W
0020:  BTFSC  03.2
0021:  GOTO   024
0022:  BTFSC  03.0
0023:  GOTO   01B
.................... 			switch (tempo++) { 
0024:  MOVF   0F,W
0025:  INCF   0F,F
0026:  XORLW  00
0027:  BTFSC  03.2
0028:  GOTO   033
0029:  XORLW  01
002A:  BTFSC  03.2
002B:  GOTO   070
002C:  XORLW  03
002D:  BTFSC  03.2
002E:  GOTO   075
002F:  XORLW  01
0030:  BTFSC  03.2
0031:  GOTO   093
0032:  GOTO   093
.................... 			case A: 
.................... 				if (!input(avanco) && input(reversao)) { 
0033:  BSF    10.3
0034:  MOVF   10,W
0035:  TRIS   6
0036:  BTFSC  06.3
0037:  GOTO   051
0038:  BSF    10.4
0039:  MOVF   10,W
003A:  TRIS   6
003B:  BTFSS  06.4
003C:  GOTO   051
.................... 					output_low(canalA); 
003D:  BCF    10.0
003E:  MOVF   10,W
003F:  TRIS   6
0040:  BCF    06.0
.................... 					output_high(canalB); 
0041:  BCF    10.1
0042:  MOVF   10,W
0043:  TRIS   6
0044:  BSF    06.1
.................... 					pulsos++; 
0045:  INCF   0B,F
0046:  BTFSC  03.2
0047:  INCF   0C,F
.................... 					if (pulsos > resolucao_encoder - 1) 
0048:  MOVLW  03
0049:  MOVWF  07
004A:  MOVF   0C,W
004B:  SUBWF  07,W
004C:  BTFSC  03.0
004D:  GOTO   050
.................... 						pulsos = 0; 
004E:  CLRF   0C
004F:  CLRF   0B
.................... 				} else if (!input(reversao) && input(avanco)) { 
0050:  GOTO   06F
0051:  BSF    10.4
0052:  MOVF   10,W
0053:  TRIS   6
0054:  BTFSC  06.4
0055:  GOTO   06F
0056:  BSF    10.3
0057:  MOVF   10,W
0058:  TRIS   6
0059:  BTFSS  06.3
005A:  GOTO   06F
.................... 					output_high(canalA); 
005B:  BCF    10.0
005C:  MOVF   10,W
005D:  TRIS   6
005E:  BSF    06.0
.................... 					output_high(canalB); 
005F:  BCF    10.1
0060:  MOVF   10,W
0061:  TRIS   6
0062:  BSF    06.1
.................... 					pulsos--; 
0063:  MOVF   0B,W
0064:  BTFSC  03.2
0065:  DECF   0C,F
0066:  DECF   0B,F
.................... 					if (!pulsos) 
0067:  MOVF   0B,W
0068:  IORWF  0C,W
0069:  BTFSS  03.2
006A:  GOTO   06F
.................... 						pulsos = resolucao_encoder - 1; 
006B:  MOVLW  03
006C:  MOVWF  0C
006D:  MOVLW  FF
006E:  MOVWF  0B
.................... 				} 
.................... 				break; 
006F:  GOTO   099
.................... 			case B: 
.................... 				output_low(canalB); 
0070:  BCF    10.1
0071:  MOVF   10,W
0072:  TRIS   6
0073:  BCF    06.1
.................... 				break; 
0074:  GOTO   099
.................... 			case C: 
.................... 				if (!input(avanco) && input(reversao)) 
0075:  BSF    10.3
0076:  MOVF   10,W
0077:  TRIS   6
0078:  BTFSC  06.3
0079:  GOTO   084
007A:  BSF    10.4
007B:  MOVF   10,W
007C:  TRIS   6
007D:  BTFSS  06.4
007E:  GOTO   084
.................... 					output_high(canalA); 
007F:  BCF    10.0
0080:  MOVF   10,W
0081:  TRIS   6
0082:  BSF    06.0
.................... 				else if (!input(reversao) && input(avanco)) 
0083:  GOTO   092
0084:  BSF    10.4
0085:  MOVF   10,W
0086:  TRIS   6
0087:  BTFSC  06.4
0088:  GOTO   092
0089:  BSF    10.3
008A:  MOVF   10,W
008B:  TRIS   6
008C:  BTFSS  06.3
008D:  GOTO   092
.................... 					output_low(canalA); 
008E:  BCF    10.0
008F:  MOVF   10,W
0090:  TRIS   6
0091:  BCF    06.0
.................... 				break; 
0092:  GOTO   099
.................... 			default: 
.................... 			case D: 
.................... 				output_high(canalB); 
0093:  BCF    10.1
0094:  MOVF   10,W
0095:  TRIS   6
0096:  BSF    06.1
.................... 				tempo = A; 
0097:  CLRF   0F
.................... 				break; 
0098:  GOTO   099
.................... 			} 
.................... 		} 
.................... 		if (!input_state(canalA) && !input_state(canalB) 
.................... 				&& !input_state(canalZ) && pulsos == resolucao_encoder - 2) 
0099:  BTFSC  06.0
009A:  GOTO   0AC
009B:  BTFSC  06.1
009C:  GOTO   0AC
009D:  BTFSC  06.5
009E:  GOTO   0AC
009F:  MOVLW  FE
00A0:  SUBWF  0B,W
00A1:  BTFSS  03.2
00A2:  GOTO   0AC
00A3:  MOVLW  03
00A4:  SUBWF  0C,W
00A5:  BTFSS  03.2
00A6:  GOTO   0AC
.................... 			output_high(canalZ); 
00A7:  BCF    10.5
00A8:  MOVF   10,W
00A9:  TRIS   6
00AA:  BSF    06.5
.................... 		else if (input_state(canalZ)) 
00AB:  GOTO   0B2
00AC:  BTFSS  06.5
00AD:  GOTO   0B2
.................... 			output_low(canalZ); 
00AE:  BCF    10.5
00AF:  MOVF   10,W
00B0:  TRIS   6
00B1:  BCF    06.5
.................... 	} 
00B2:  GOTO   010
.................... } 
00B3:  SLEEP

Configuration Fuses:
   Word  1: 0FEA   INTRC NOWDT NOPROTECT NOMCLR

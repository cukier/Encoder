CCS PCH C Compiler, Version 4.124, 5967               16-jan-13 15:21

               Filename: C:\Users\cuki\Eletronica\Projetos\Encoder\encoder.lst

               ROM used: 2142 bytes (7%)
                         Largest free fragment is 30622
               RAM used: 58 (4%) at main() level
                         84 (5%) worst case
               Stack:    3 worst case (2 in main + 1 for interrupts)

*
0000:  GOTO   074A
*
0008:  GOTO   00B2
000C:  NOP   
000E:  NOP   
0010:  NOP   
0012:  NOP   
0014:  NOP   
0016:  NOP   
0018:  MOVWF  04
001A:  MOVFF  FD8,05
001E:  MOVFF  FE0,06
0022:  MOVLB  0
0024:  MOVFF  FE9,0C
0028:  MOVFF  FEA,07
002C:  MOVFF  FE1,08
0030:  MOVFF  FE2,09
0034:  MOVFF  FD9,0A
0038:  MOVFF  FDA,0B
003C:  MOVFF  FF3,12
0040:  MOVFF  FF4,13
0044:  MOVFF  FFA,14
0048:  MOVFF  FF5,15
004C:  MOVFF  FF6,16
0050:  MOVFF  FF7,17
0054:  MOVFF  00,0E
0058:  MOVFF  01,0F
005C:  MOVFF  02,10
0060:  MOVFF  03,11
0064:  MOVFF  0E,00
0068:  MOVFF  0F,01
006C:  MOVFF  10,02
0070:  MOVFF  11,03
0074:  MOVFF  0C,FE9
0078:  MOVFF  07,FEA
007C:  BSF    07.7
007E:  MOVFF  08,FE1
0082:  MOVFF  09,FE2
0086:  MOVFF  0A,FD9
008A:  MOVFF  0B,FDA
008E:  MOVFF  12,FF3
0092:  MOVFF  13,FF4
0096:  MOVFF  14,FFA
009A:  MOVFF  15,FF5
009E:  MOVFF  16,FF6
00A2:  MOVFF  17,FF7
00A6:  MOVF   04,W
00A8:  MOVFF  06,FE0
00AC:  MOVFF  05,FD8
00B0:  RETFIE 0
00B2:  MOVLB  0
00B4:  MOVFF  FE9,1E
00B8:  MOVFF  FEA,19
00BC:  MOVFF  FE1,1A
00C0:  MOVFF  FE2,1B
00C4:  MOVFF  FD9,1C
00C8:  MOVFF  FDA,1D
00CC:  MOVFF  FF3,24
00D0:  MOVFF  FF4,25
00D4:  MOVFF  FFA,26
00D8:  MOVFF  FF5,27
00DC:  MOVFF  FF6,28
00E0:  MOVFF  FF7,29
00E4:  MOVFF  00,20
00E8:  MOVFF  01,21
00EC:  MOVFF  02,22
00F0:  MOVFF  03,23
00F4:  BTFSS  FF2.4
00F6:  GOTO   0100
00FA:  BTFSC  FF2.1
00FC:  GOTO   0150
0100:  BTFSS  FF0.4
0102:  GOTO   010C
0106:  BTFSC  FF0.1
0108:  GOTO   0176
010C:  MOVFF  20,00
0110:  MOVFF  21,01
0114:  MOVFF  22,02
0118:  MOVFF  23,03
011C:  MOVFF  1E,FE9
0120:  MOVFF  19,FEA
0124:  BSF    19.7
0126:  MOVFF  1A,FE1
012A:  MOVFF  1B,FE2
012E:  MOVFF  1C,FD9
0132:  MOVFF  1D,FDA
0136:  MOVFF  24,FF3
013A:  MOVFF  25,FF4
013E:  MOVFF  26,FFA
0142:  MOVFF  27,FF5
0146:  MOVFF  28,FF6
014A:  MOVFF  29,FF7
014E:  RETFIE 1
.................... #include <18F452.h> 
.................... //////// Standard Header file for the PIC18F452 device //////////////// 
.................... #device PIC18F452 
.................... #list 
....................  
.................... #device high_ints = true 
....................  
.................... #fuses	H4,NOOSCSEN,NOPUT,NOBROWNOUT,NOWDT,NOSTVREN,NOLVP 
.................... #fuses	NODEBUG,NOPROTECT,NOCPB,NOCPD,NOWRT,NOWRTC,NOWRTB 
.................... #fuses	NOWRTD,NOEBTR,NOEBTRB 
....................  
.................... #use delay(clock=32MHz, crystal=8MHz) 
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
.................... #use spi(MASTER, DI=PIN_C4, DO=PIN_C5, CLK=PIN_C3, MODE=3,  BAUD=2000000, BITS=12, DATA_HOLD=1) 
....................  
.................... #define canal_b pin_b1 
....................  
.................... static signed long pulsos, resol, pulsosAux; 
.................... static short print = 1; 
.................... static float angulo; 
....................  
.................... #INT_EXT 
.................... void ext_isr() { 
.................... 	!input_state(canal_b) ? pulsos++ : pulsos--; 
*
0150:  BTFSC  F81.1
0152:  BRA    0162
0154:  MOVFF  2C,03
0158:  MOVF   2B,W
015A:  INCF   2B,F
015C:  BTFSC  FD8.2
015E:  INCF   2C,F
0160:  BRA    016E
0162:  MOVFF  2C,03
0166:  MOVF   2B,W
0168:  BTFSC  FD8.2
016A:  DECF   2C,F
016C:  DECF   2B,F
.................... 	print = 1; 
016E:  BSF    31.0
.................... } 
....................  
0170:  BCF    FF2.1
0172:  GOTO   010C
.................... #INT_EXT2 HIGH 
.................... void ext2_isr() { 
.................... 	pulsosAux = pulsos; 
0176:  MOVFF  2C,30
017A:  MOVFF  2B,2F
.................... 	pulsos = 0; 
017E:  CLRF   2C
0180:  CLRF   2B
.................... } 
....................  
0182:  BCF    FF0.1
0184:  GOTO   010C
.................... int main(void) { 
*
074A:  CLRF   FF8
074C:  BSF    FF0.7
074E:  BSF    FD0.7
0750:  BSF    07.7
0752:  CLRF   FEA
0754:  CLRF   FE9
0756:  MOVLW  33
0758:  MOVWF  FAF
075A:  MOVLW  A2
075C:  MOVWF  FAC
075E:  MOVLW  90
0760:  MOVWF  FAB
0762:  BSF    F94.4
0764:  BCF    F94.5
0766:  BCF    F94.3
0768:  BSF    F8B.3
076A:  BSF    31.0
076C:  BSF    FC1.0
076E:  BSF    FC1.1
0770:  BSF    FC1.2
0772:  BCF    FC1.3
0774:  CLRF   2B
0776:  CLRF   2C
0778:  CLRF   2D
077A:  CLRF   2E
077C:  CLRF   2F
077E:  CLRF   30
0780:  CLRF   32
0782:  CLRF   33
0784:  CLRF   34
0786:  CLRF   35
....................  
.................... 	enable_interrupts(INT_EXT_L2H); 
0788:  BSF    FF2.4
078A:  BSF    FF1.6
.................... 	enable_interrupts(INT_EXT2_H2L); 
078C:  BSF    FF0.4
078E:  BCF    FF1.4
.................... 	enable_interrupts(global); 
0790:  MOVLW  C0
0792:  IORWF  FF2,F
....................  
.................... 	resol = 1024; 
0794:  MOVLW  04
0796:  MOVWF  2E
0798:  CLRF   2D
....................  
.................... 	while (true) { 
.................... 		if (print) { 
079A:  BTFSS  31.0
079C:  BRA    085A
.................... 			print = 0; 
079E:  BCF    31.0
.................... 			printf("%Ld %Ld\n%f", pulsos, pulsosAux, 
.................... 					(float) 360 * pulsos / resol); 
07A0:  MOVFF  2C,3B
07A4:  MOVFF  2B,3A
07A8:  RCALL  0188
07AA:  CLRF   4A
07AC:  CLRF   49
07AE:  MOVLW  34
07B0:  MOVWF  48
07B2:  MOVLW  87
07B4:  MOVWF  47
07B6:  MOVFF  03,4E
07BA:  MOVFF  02,4D
07BE:  MOVFF  01,4C
07C2:  MOVFF  00,4B
07C6:  RCALL  01D0
07C8:  MOVFF  00,36
07CC:  MOVFF  01,37
07D0:  MOVFF  02,38
07D4:  MOVFF  03,39
07D8:  MOVFF  2E,3B
07DC:  MOVFF  2D,3A
07E0:  RCALL  0188
07E2:  MOVFF  39,3D
07E6:  MOVFF  38,3C
07EA:  MOVFF  37,3B
07EE:  MOVFF  36,3A
07F2:  MOVFF  03,41
07F6:  MOVFF  02,40
07FA:  MOVFF  01,3F
07FE:  MOVFF  00,3E
0802:  BRA    02C2
0804:  MOVFF  00,36
0808:  MOVFF  01,37
080C:  MOVFF  02,38
0810:  MOVFF  03,39
0814:  MOVLW  10
0816:  MOVWF  FE9
0818:  MOVFF  2C,3B
081C:  MOVFF  2B,3A
0820:  RCALL  041E
0822:  MOVLW  20
0824:  BTFSS  F9E.4
0826:  BRA    0824
0828:  MOVWF  FAD
082A:  MOVLW  10
082C:  MOVWF  FE9
082E:  MOVFF  30,3B
0832:  MOVFF  2F,3A
0836:  RCALL  041E
0838:  MOVLW  0A
083A:  BTFSS  F9E.4
083C:  BRA    083A
083E:  MOVWF  FAD
0840:  MOVLW  89
0842:  MOVWF  FE9
0844:  MOVFF  39,3D
0848:  MOVFF  38,3C
084C:  MOVFF  37,3B
0850:  MOVFF  36,3A
0854:  MOVLW  02
0856:  MOVWF  3E
0858:  BRA    05C8
.................... 		} 
.................... 	} 
085A:  BRA    079A
....................  
.................... 	return 0; 
085C:  MOVLW  00
085E:  MOVWF  01
.................... } 
0860:  SLEEP 

Configuration Fuses:
   Word  1: 2600   H4 NOOSCSEN
   Word  2: 0E0D   NOPUT NOBROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0080   NOSTVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

CCS PCH C Compiler, Version 4.140, 21898               01-ago-13 14:36

               Filename:   D:\Eletronica\Projetos\Encoder\encoder.lst

               ROM used:   404 bytes (1%)
                           Largest free fragment is 32364
               RAM used:   11 (1%) at main() level
                           20 (1%) worst case
               Stack:     1 locations

*
0000:  GOTO   00A8
.................... /*Ligacao do Encoder 
....................  * 	MR - A 
....................  * 	VM - B 
....................  * 	LR - Z 
....................  * 	AM - VSS 
....................  * 	VD - VDD 
....................  */ 
....................  
.................... #include <18F45k20.h> 
.................... //////// Standard Header file for the PIC18F45K20 device //////////////// 
.................... #device PIC18F45K20 
.................... #list 
....................  
....................  
.................... #fuses H4 
.................... #use delay(crystal=15MHz, clock=60MHz) 
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
....................  
.................... #define canalA		PIN_A4 
.................... #define canalB		PIN_B4 
.................... #define canalZ		PIN_B5 
.................... #define bto_sobe	PIN_D0 
.................... #define bto_desce	PIN_D1 
....................  
.................... static long aux, cont, cont2; 
.................... static short ctrl, trigSobe, trigDesce; 
....................  
.................... void main(void) { 
00A8:  CLRF   FF8
00AA:  BCF    FD0.7
00AC:  CLRF   FEA
00AE:  CLRF   FE9
00B0:  BSF    FB8.3
00B2:  MOVLW  1A
00B4:  MOVWF  FAF
00B6:  MOVLW  06
00B8:  MOVWF  FB0
00BA:  MOVLW  A6
00BC:  MOVWF  FAC
00BE:  MOVLW  90
00C0:  MOVWF  FAB
00C2:  MOVLW  00
00C4:  MOVWF  F7E
00C6:  BCF    FC1.4
00C8:  BCF    FC1.5
00CA:  MOVF   F7F,W
00CC:  ANDLW  E0
00CE:  MOVWF  F7F
00D0:  BCF    F79.5
00D2:  BCF    F79.4
00D4:  CLRF   F7A
00D6:  CLRF   F7B
00D8:  CLRF   04
00DA:  CLRF   05
00DC:  CLRF   06
00DE:  CLRF   07
00E0:  CLRF   08
00E2:  CLRF   09
00E4:  BCF    0A.0
00E6:  BCF    0A.1
00E8:  BCF    0A.2
.................... 	set_timer0(0); 
00EA:  CLRF   FD7
00EC:  CLRF   FD6
.................... 	setup_timer_0(T0_EXT_H_TO_L); 
00EE:  MOVLW  B0
00F0:  MOVWF  FD5
.................... 	while (TRUE) { 
.................... 		if (!input(bto_sobe) && input(bto_desce)) { 
00F2:  BSF    F95.0
00F4:  BTFSC  F83.0
00F6:  BRA    0114
00F8:  BSF    F95.1
00FA:  BTFSS  F83.1
00FC:  BRA    0114
.................... 			if (trigSobe) { 
00FE:  BTFSS  0A.1
0100:  BRA    010C
.................... 				trigSobe = FALSE; 
0102:  BCF    0A.1
.................... 				set_timer0(cont); 
0104:  MOVFF  07,FD7
0108:  MOVFF  06,FD6
.................... 			} 
.................... 			cont = get_timer0(); 
010C:  MOVF   FD6,W
010E:  MOVWF  06
0110:  MOVFF  FD7,07
.................... 		} 
.................... 		if (!input(bto_desce) && input(bto_sobe)) { 
0114:  BSF    F95.1
0116:  BTFSC  F83.1
0118:  BRA    012C
011A:  BSF    F95.0
011C:  BTFSS  F83.0
011E:  BRA    012C
.................... 			cont = cont2 - get_timer0(); 
0120:  MOVF   FD6,W
0122:  SUBWF  08,W
0124:  MOVWF  06
0126:  MOVF   FD7,W
0128:  SUBWFB 09,W
012A:  MOVWF  07
.................... 		} 
.................... 		if (input(bto_sobe) && input(bto_desce) && ctrl) { 
012C:  BSF    F95.0
012E:  BTFSS  F83.0
0130:  BRA    014E
0132:  BSF    F95.1
0134:  BTFSS  F83.1
0136:  BRA    014E
0138:  BTFSS  0A.0
013A:  BRA    014E
.................... 			set_timer0(0); 
013C:  CLRF   FD7
013E:  CLRF   FD6
.................... 			cont2 = cont; 
0140:  MOVFF  07,09
0144:  MOVFF  06,08
.................... 			trigSobe = TRUE; 
0148:  BSF    0A.1
.................... 			trigDesce = TRUE; 
014A:  BSF    0A.2
.................... 		} else 
014C:  BRA    0150
.................... 			ctrl = TRUE; 
014E:  BSF    0A.0
.................... 		if (cont != aux) { 
0150:  MOVF   04,W
0152:  SUBWF  06,W
0154:  BNZ   015C
0156:  MOVF   05,W
0158:  SUBWF  07,W
015A:  BZ    0190
.................... 			aux = cont; 
015C:  MOVFF  07,05
0160:  MOVFF  06,04
.................... 			printf("\f%Lu %Lu", cont, cont2); 
0164:  MOVLW  0C
0166:  BTFSS  F9E.4
0168:  BRA    0166
016A:  MOVWF  FAD
016C:  MOVLW  10
016E:  MOVWF  FE9
0170:  MOVFF  07,0C
0174:  MOVFF  06,0B
0178:  RCALL  0004
017A:  MOVLW  20
017C:  BTFSS  F9E.4
017E:  BRA    017C
0180:  MOVWF  FAD
0182:  MOVLW  10
0184:  MOVWF  FE9
0186:  MOVFF  09,0C
018A:  MOVFF  08,0B
018E:  RCALL  0004
.................... 		} 
.................... 	} 
0190:  BRA    00F2
.................... } 
0192:  SLEEP 

Configuration Fuses:
   Word  1: C600   H4 FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV18 NOWDT WDT32768
   Word  3: 8F00   CCP2C1 PBADEN LPT1OSC HFOFST MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

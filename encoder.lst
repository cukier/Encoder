CCS PCH C Compiler, Version 4.140, 31805               13-fev-14 09:47

               Filename:   D:\Eletronica\Projetos\Encoder\encoder.lst

               ROM used:   1102 bytes (3%)
                           Largest free fragment is 31662
               RAM used:   52 (3%) at main() level
                           61 (4%) worst case
               Stack:     3 worst case (1 in main + 2 for interrupts)

*
0000:  GOTO   02C0
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  F9D.3
0056:  GOTO   0060
005A:  BTFSC  F9E.3
005C:  GOTO   00C4
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... /*Ligacao do Encoder 
....................  * 	MR - A 
....................  * 	VM - B 
....................  * 	LR - Z 
....................  * 	AM - VSS 
....................  * 	VD - VDD 
....................  */ 
....................  
.................... /*Quando encoder não programado: 
....................  * nr maximo de pulsos... 
....................  * no pino T0CLK : 128 
....................  * no pino EXT:	255 
....................  */ 
....................  
.................... #include <18F45k20.h> 
.................... //////// Standard Header file for the PIC18F45K20 device //////////////// 
.................... #device PIC18F45K20 
.................... #list 
....................  
....................  
.................... #fuses H4 
.................... #use delay(crystal=15MHz, clock=60MHz) 
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
.................... #use i2c (slave,scl=PIN_C3,sda=PIN_C4,FORCE_HW,FAST=100000) 
*
00AE:  MOVF   FC9,W
00B0:  MOVFF  3C,FC9
00B4:  BSF    FC6.4
00B6:  BCF    F9E.3
00B8:  BTFSC  FC7.0
00BA:  BRA    00B8
00BC:  CLRF   01
00BE:  BTFSC  FC6.4
00C0:  INCF   01,F
00C2:  RETURN 0
....................  
.................... #define canalA		PIN_A4 
.................... #define canalB		PIN_B4 
.................... #define canalZ		PIN_B5 
.................... #define bto_sobe	PIN_D0 
.................... #define bto_desce	PIN_D1 
....................  
.................... static signed long cont, cont1, aux, pulsosRecebido; 
.................... static long sentido, sentido1, max, contTmr, contTmrMax; 
.................... static short ctrl; 
.................... static int estado, lido, primeiraLeitura, segundaLeitura, cmd; 
....................  
.................... #INT_SSP 
.................... void ssp_interrupt() { 
.................... 	estado = i2c_isr_state(); 
00C4:  BTFSC  FC7.5
00C6:  BRA    00CE
00C8:  CLRF   31
00CA:  BTFSC  FC7.2
00CC:  BSF    31.7
00CE:  MOVF   31,W
00D0:  INCF   31,F
00D2:  MOVWF  2C
.................... 	if (estado < 0x80) { 
00D4:  MOVF   2C,W
00D6:  SUBLW  7F
00D8:  BNC   0116
.................... 		lido = i2c_read(); 
00DA:  BCF    FC6.6
00DC:  BTFSS  F9E.3
00DE:  BRA    00DC
00E0:  MOVF   FC9,W
00E2:  BSF    FC6.4
00E4:  MOVWF  2D
.................... 		if (estado == 1) { 
00E6:  DECFSZ 2C,W
00E8:  BRA    00F2
.................... 			primeiraLeitura = 0; 
00EA:  CLRF   2E
.................... 			primeiraLeitura = lido; 
00EC:  MOVFF  2D,2E
.................... 		} else if (estado == 2) { 
00F0:  BRA    0114
00F2:  MOVF   2C,W
00F4:  SUBLW  02
00F6:  BNZ   0108
.................... 			segundaLeitura = 0; 
00F8:  CLRF   2F
.................... 			segundaLeitura = lido; 
00FA:  MOVFF  2D,2F
.................... 			pulsosRecebido = make16(primeiraLeitura, segundaLeitura); 
00FE:  MOVFF  2E,20
0102:  MOVFF  2F,1F
.................... 		} else if (estado == 3) { 
0106:  BRA    0114
0108:  MOVF   2C,W
010A:  SUBLW  03
010C:  BNZ   0114
.................... 			cmd = 0; 
010E:  CLRF   30
.................... 			cmd = lido; 
0110:  MOVFF  2D,30
.................... 		} 
.................... 	} else if (estado == 0x80) { 
0114:  BRA    013A
0116:  MOVF   2C,W
0118:  SUBLW  80
011A:  BNZ   013A
.................... 		if (primeiraLeitura == 0) { 
011C:  MOVF   2E,F
011E:  BNZ   012C
.................... 			i2c_write(make8(cont, 1)); 
0120:  MOVFF  1A,3B
0124:  MOVFF  1A,3C
0128:  RCALL  00AE
.................... 		} else if (primeiraLeitura == 1) { 
012A:  BRA    013A
012C:  DECFSZ 2E,W
012E:  BRA    013A
.................... 			i2c_write(make8(cont, 0)); 
0130:  MOVFF  19,3B
0134:  MOVFF  19,3C
0138:  RCALL  00AE
.................... 		} 
.................... 	} 
.................... } 
....................  
013A:  BCF    F9E.3
013C:  GOTO   0060
.................... void main(void) { 
*
02C0:  CLRF   FF8
02C2:  BCF    FD0.7
02C4:  BSF    07.7
02C6:  CLRF   FEA
02C8:  CLRF   FE9
02CA:  BSF    FB8.3
02CC:  MOVLW  1A
02CE:  MOVWF  FAF
02D0:  MOVLW  06
02D2:  MOVWF  FB0
02D4:  MOVLW  A6
02D6:  MOVWF  FAC
02D8:  MOVLW  90
02DA:  MOVWF  FAB
02DC:  BSF    F94.3
02DE:  BSF    F94.4
02E0:  CLRF   FC8
02E2:  MOVLW  36
02E4:  MOVWF  FC6
02E6:  BSF    FC5.0
02E8:  MOVLW  03
02EA:  MOVWF  31
02EC:  MOVLW  00
02EE:  MOVWF  F7E
02F0:  BCF    FC1.4
02F2:  BCF    FC1.5
02F4:  MOVF   F7F,W
02F6:  ANDLW  E0
02F8:  MOVWF  F7F
02FA:  BCF    F79.5
02FC:  BCF    F79.4
02FE:  CLRF   F7A
0300:  CLRF   F7B
0302:  CLRF   19
0304:  CLRF   1A
0306:  CLRF   1B
0308:  CLRF   1C
030A:  CLRF   1D
030C:  CLRF   1E
030E:  CLRF   1F
0310:  CLRF   20
0312:  CLRF   21
0314:  CLRF   22
0316:  CLRF   23
0318:  CLRF   24
031A:  CLRF   25
031C:  CLRF   26
031E:  CLRF   27
0320:  CLRF   28
0322:  CLRF   29
0324:  CLRF   2A
0326:  BCF    2B.0
0328:  CLRF   2C
032A:  CLRF   2D
032C:  CLRF   2E
032E:  CLRF   2F
0330:  CLRF   30
.................... 	set_timer0(0); 
0332:  CLRF   FD7
0334:  CLRF   FD6
.................... 	setup_timer_1(T1_EXTERNAL); 
0336:  MOVLW  87
0338:  MOVWF  FCD
.................... 	port_b_pullups(TRUE); 
033A:  MOVLW  01
033C:  MOVWF  F7C
033E:  BCF    FF1.7
.................... 	enable_interrupts(INT_EXT1_H2L); 
0340:  BSF    FF0.3
0342:  BCF    FF1.5
.................... 	enable_interrupts(GLOBAL); 
0344:  MOVLW  C0
0346:  IORWF  FF2,F
.................... 	while (TRUE) { 
.................... 		contTmr = get_timer0(); 
0348:  MOVF   FD6,W
034A:  MOVWF  27
034C:  MOVFF  FD7,28
.................... 		/*if (!input(bto_sobe) && input(bto_desce)) { 
.................... 		 cont = cont1 + get_timer0(); 
.................... 		 } 
.................... 		 if (!input(bto_desce) && input(bto_sobe)) { 
.................... 		 cont = cont1 - get_timer0(); 
.................... 		 } 
.................... 		 if (input(bto_sobe) && input(bto_desce) && ctrl) { 
.................... 		 set_timer0(0); 
.................... 		 cont1 = cont; 
.................... 		 } else 
.................... 		 ctrl = TRUE;*/ 
.................... 		if (aux != contTmr + sentido + sentido1) { 
0350:  MOVF   21,W
0352:  ADDWF  27,W
0354:  MOVWF  32
0356:  MOVF   22,W
0358:  ADDWFC 28,W
035A:  MOVWF  33
035C:  MOVF   23,W
035E:  ADDWF  32,W
0360:  MOVWF  01
0362:  MOVF   24,W
0364:  ADDWFC 33,W
0366:  MOVWF  03
0368:  MOVF   01,W
036A:  SUBWF  1D,W
036C:  BNZ   0376
036E:  MOVF   03,W
0370:  SUBWF  1E,W
0372:  BTFSC  FD8.2
0374:  BRA    044E
.................... 			aux = contTmr + sentido + sentido1; 
0376:  MOVF   21,W
0378:  ADDWF  27,W
037A:  MOVWF  32
037C:  MOVF   22,W
037E:  ADDWFC 28,W
0380:  MOVWF  33
0382:  MOVF   23,W
0384:  ADDWF  32,W
0386:  MOVWF  01
0388:  MOVF   24,W
038A:  ADDWFC 33,W
038C:  MOVFF  01,1D
0390:  MOVWF  1E
.................... 			if (contTmrMax < contTmr) 
0392:  MOVF   2A,W
0394:  SUBWF  28,W
0396:  BNC   03A8
0398:  BNZ   03A0
039A:  MOVF   27,W
039C:  SUBWF  29,W
039E:  BC    03A8
.................... 				contTmrMax = contTmr; 
03A0:  MOVFF  28,2A
03A4:  MOVFF  27,29
.................... 			max = (max < sentido) ? sentido : (max < sentido1) ? sentido1 : max; 
03A8:  MOVF   26,W
03AA:  SUBWF  22,W
03AC:  BNC   03BE
03AE:  BNZ   03B6
03B0:  MOVF   21,W
03B2:  SUBWF  25,W
03B4:  BC    03BE
03B6:  MOVFF  22,03
03BA:  MOVF   21,W
03BC:  BRA    03DA
03BE:  MOVF   26,W
03C0:  SUBWF  24,W
03C2:  BNC   03D4
03C4:  BNZ   03CC
03C6:  MOVF   23,W
03C8:  SUBWF  25,W
03CA:  BC    03D4
03CC:  MOVFF  24,03
03D0:  MOVF   23,W
03D2:  BRA    03DA
03D4:  MOVFF  26,03
03D8:  MOVF   25,W
03DA:  MOVWF  25
03DC:  MOVFF  03,26
....................  
.................... 			printf("\f%Lu %Lu\n%Ld %Ld %Ld", contTmr, contTmrMax, sentido, 
.................... 					sentido1, max); 
03E0:  MOVLW  0C
03E2:  BTFSS  F9E.4
03E4:  BRA    03E2
03E6:  MOVWF  FAD
03E8:  MOVLW  10
03EA:  MOVWF  FE9
03EC:  MOVFF  28,33
03F0:  MOVFF  27,32
03F4:  RCALL  0140
03F6:  MOVLW  20
03F8:  BTFSS  F9E.4
03FA:  BRA    03F8
03FC:  MOVWF  FAD
03FE:  MOVLW  10
0400:  MOVWF  FE9
0402:  MOVFF  2A,33
0406:  MOVFF  29,32
040A:  RCALL  0140
040C:  MOVLW  0A
040E:  BTFSS  F9E.4
0410:  BRA    040E
0412:  MOVWF  FAD
0414:  MOVLW  10
0416:  MOVWF  FE9
0418:  MOVFF  22,33
041C:  MOVFF  21,32
0420:  RCALL  01E4
0422:  MOVLW  20
0424:  BTFSS  F9E.4
0426:  BRA    0424
0428:  MOVWF  FAD
042A:  MOVLW  10
042C:  MOVWF  FE9
042E:  MOVFF  24,33
0432:  MOVFF  23,32
0436:  RCALL  01E4
0438:  MOVLW  20
043A:  BTFSS  F9E.4
043C:  BRA    043A
043E:  MOVWF  FAD
0440:  MOVLW  10
0442:  MOVWF  FE9
0444:  MOVFF  26,33
0448:  MOVFF  25,32
044C:  RCALL  01E4
.................... 		} 
.................... 	} 
044E:  BRA    0348
.................... } 
0450:  SLEEP 

Configuration Fuses:
   Word  1: C600   H4 FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV18 NOWDT WDT32768
   Word  3: 8F00   CCP2C1 PBADEN LPT1OSC HFOFST MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB

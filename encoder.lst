CCS PCH C Compiler, Version 4.140, 21898               01-ago-13 15:43

               Filename:   D:\Eletronica\Projetos\Encoder\encoder.lst

               ROM used:   1094 bytes (3%)
                           Largest free fragment is 31670
               RAM used:   35 (2%) at main() level
                           44 (3%) worst case
               Stack:     3 worst case (2 in main + 1 for interrupts)

*
0000:  GOTO   0328
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  FF2.4
0056:  GOTO   0060
005A:  BTFSC  FF2.1
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... /*Ligacao do Encoder 
....................  * 	MR - A 
....................  * 	VM - B 
....................  * 	LR - Z 
....................  * 	AM - VSS 
....................  * 	VD - VDD 
....................  */ 
....................  
.................... #include <18F45k20.h> 
.................... //////// Standard Header file for the PIC18F45K20 device //////////////// 
.................... #device PIC18F45K20 
.................... #list 
....................  
....................  
.................... #fuses H4 
.................... #use delay(crystal=15MHz, clock=60MHz) 
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7) 
....................  
.................... #define canalA		PIN_A4 
.................... #define canalB		PIN_B4 
.................... #define canalZ		PIN_B5 
.................... #define bto_sobe	PIN_D0 
.................... #define bto_desce	PIN_D1 
....................  
.................... static signed long cont, cont2, cont3, aux; 
.................... static short ctrl, sentido; 
....................  
.................... #INT_EXT 
.................... void ext_isr(void) { 
.................... 	clear_interrupt(INT_EXT); 
*
00AE:  BCF    FF2.1
.................... 	if (input_state(canalB)) 
00B0:  BTFSS  F81.4
00B2:  BRA    00BC
.................... 		cont3++; 
00B4:  INCF   1D,F
00B6:  BTFSC  FD8.2
00B8:  INCF   1E,F
.................... 	else 
00BA:  BRA    00C4
.................... 		cont3--; 
00BC:  MOVF   1D,W
00BE:  BTFSC  FD8.2
00C0:  DECF   1E,F
00C2:  DECF   1D,F
.................... } 
....................  
00C4:  BCF    FF2.1
00C6:  GOTO   0060
.................... void main(void) { 
*
0328:  CLRF   FF8
032A:  BCF    FD0.7
032C:  BSF    07.7
032E:  CLRF   FEA
0330:  CLRF   FE9
0332:  BSF    FB8.3
0334:  MOVLW  1A
0336:  MOVWF  FAF
0338:  MOVLW  06
033A:  MOVWF  FB0
033C:  MOVLW  A6
033E:  MOVWF  FAC
0340:  MOVLW  90
0342:  MOVWF  FAB
0344:  MOVLW  00
0346:  MOVWF  F7E
0348:  BCF    FC1.4
034A:  BCF    FC1.5
034C:  MOVF   F7F,W
034E:  ANDLW  E0
0350:  MOVWF  F7F
0352:  BCF    F79.5
0354:  BCF    F79.4
0356:  CLRF   F7A
0358:  CLRF   F7B
035A:  CLRF   19
035C:  CLRF   1A
035E:  CLRF   1B
0360:  CLRF   1C
0362:  CLRF   1D
0364:  CLRF   1E
0366:  CLRF   1F
0368:  CLRF   20
036A:  BCF    21.0
036C:  BCF    21.1
.................... 	set_timer0(0); 
036E:  CLRF   FD7
0370:  CLRF   FD6
.................... 	setup_timer_0(T0_EXT_L_TO_H); 
0372:  MOVLW  A0
0374:  MOVWF  FD5
.................... 	port_b_pullups(TRUE); 
0376:  MOVLW  01
0378:  MOVWF  F7C
037A:  BCF    FF1.7
.................... 	clear_interrupt(INT_EXT); 
037C:  BCF    FF2.1
.................... 	enable_interrupts(INT_EXT_L2H); 
037E:  BSF    FF2.4
0380:  BSF    FF1.6
.................... 	enable_interrupts(GLOBAL); 
0382:  MOVLW  C0
0384:  IORWF  FF2,F
.................... 	while (TRUE) { 
.................... 		if (!input(bto_sobe) && input(bto_desce)) { 
0386:  BSF    F95.0
0388:  BTFSC  F83.0
038A:  BRA    039E
038C:  BSF    F95.1
038E:  BTFSS  F83.1
0390:  BRA    039E
.................... 			cont = cont2 + get_timer0(); 
0392:  MOVF   FD6,W
0394:  ADDWF  1B,W
0396:  MOVWF  19
0398:  MOVF   FD7,W
039A:  ADDWFC 1C,W
039C:  MOVWF  1A
.................... 		} 
.................... 		if (!input(bto_desce) && input(bto_sobe)) { 
039E:  BSF    F95.1
03A0:  BTFSC  F83.1
03A2:  BRA    03B6
03A4:  BSF    F95.0
03A6:  BTFSS  F83.0
03A8:  BRA    03B6
.................... 			cont = cont2 - get_timer0(); 
03AA:  MOVF   FD6,W
03AC:  SUBWF  1B,W
03AE:  MOVWF  19
03B0:  MOVF   FD7,W
03B2:  SUBWFB 1C,W
03B4:  MOVWF  1A
.................... 		} 
.................... 		if (input(bto_sobe) && input(bto_desce) && ctrl) { 
03B6:  BSF    F95.0
03B8:  BTFSS  F83.0
03BA:  BRA    03D4
03BC:  BSF    F95.1
03BE:  BTFSS  F83.1
03C0:  BRA    03D4
03C2:  BTFSS  21.0
03C4:  BRA    03D4
.................... 			set_timer0(0); 
03C6:  CLRF   FD7
03C8:  CLRF   FD6
.................... 			cont2 = cont; 
03CA:  MOVFF  1A,1C
03CE:  MOVFF  19,1B
.................... 		} else 
03D2:  BRA    03D6
.................... 			ctrl = TRUE; 
03D4:  BSF    21.0
.................... 		if (aux != cont3) { 
03D6:  MOVF   1D,W
03D8:  SUBWF  1F,W
03DA:  BNZ   03E2
03DC:  MOVF   1E,W
03DE:  SUBWF  20,W
03E0:  BZ    0446
.................... 			aux = cont3; 
03E2:  MOVFF  1E,20
03E6:  MOVFF  1D,1F
.................... 			printf("\f%Lu %Lu %d %Ld", cont, cont2, sentido, cont3); 
03EA:  MOVLW  00
03EC:  BTFSC  21.1
03EE:  MOVLW  01
03F0:  MOVWF  22
03F2:  MOVLW  0C
03F4:  BTFSS  F9E.4
03F6:  BRA    03F4
03F8:  MOVWF  FAD
03FA:  MOVLW  10
03FC:  MOVWF  FE9
03FE:  MOVFF  1A,24
0402:  MOVFF  19,23
0406:  RCALL  00CA
0408:  MOVLW  20
040A:  BTFSS  F9E.4
040C:  BRA    040A
040E:  MOVWF  FAD
0410:  MOVLW  10
0412:  MOVWF  FE9
0414:  MOVFF  1C,24
0418:  MOVFF  1B,23
041C:  RCALL  00CA
041E:  MOVLW  20
0420:  BTFSS  F9E.4
0422:  BRA    0420
0424:  MOVWF  FAD
0426:  MOVFF  22,23
042A:  MOVLW  18
042C:  MOVWF  24
042E:  BRA    0196
0430:  MOVLW  20
0432:  BTFSS  F9E.4
0434:  BRA    0432
0436:  MOVWF  FAD
0438:  MOVLW  10
043A:  MOVWF  FE9
043C:  MOVFF  1E,24
0440:  MOVFF  1D,23
0444:  BRA    024A
.................... 		} 
.................... 	} 
0446:  BRA    0386
.................... } 
0448:  SLEEP 

Configuration Fuses:
   Word  1: C600   H4 FCMEN IESO
   Word  2: 1E1E   PUT BROWNOUT BORV18 NOWDT WDT32768
   Word  3: 8F00   CCP2C1 PBADEN LPT1OSC HFOFST MCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
